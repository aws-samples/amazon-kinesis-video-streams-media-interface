name: ingenic-t31

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BOARD: T31

jobs:
  ecr-prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: codingspirit/amazon-ecr-login@master

      - name: Set ECR credentials
        id: set-ecr-credentials
        run: |
          gh auth login --with-token <<< ${{ secrets.PA_TOKEN }}
          gh secret set --env ECR ECR_REGISTRY --body ${{ steps.login-ecr.outputs.registry }} --repo ${{ github.repository }}
          gh secret set --env ECR ECR_USERNAME --body ${{ steps.login-ecr.outputs.docker_username }} --repo ${{ github.repository }}
          gh secret set --env ECR ECR_PASSWORD --body ${{ steps.login-ecr.outputs.docker_password }} --repo ${{ github.repository }}

  ingenic:
    environment: ECR
    needs: ecr-prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          [
            "482862934379.dkr.ecr.us-east-1.amazonaws.com/ingenic:4.7.2",
            "482862934379.dkr.ecr.us-east-1.amazonaws.com/ingenic:5.4.0",
          ]
    container:
      image: ${{ matrix.container }}
      credentials:
        username: ${{ secrets.ECR_USERNAME }}
        password: ${{ secrets.ECR_PASSWORD }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Prepare board SDK
        run: |
          cp -r /ingenic-sdk/* ${GITHUB_WORKSPACE}/3rdparty/T31/

      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DBOARD=${{ env.BOARD }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_WEBRTC_SAMPLES=ON -DBUILD_KVS_SAMPLES=ON -DBUILD_SAVE_FRAME_SAMPLES=ON

      - name: Build
        run: |
          cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --parallel 4
          pwd
          ls -al ${{ github.workspace }}/build/*
          ls -al ${{ github.workspace }}/build/samples/kvsproducer/*
          ls -al ${{ github.workspace }}/build/samples/webrtc/*

      - name: Test
        run: ctest -C ${{ env.BUILD_TYPE }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: media-interface-t31-artifacts
          path: ${{ github.workspace }}/build/samples
